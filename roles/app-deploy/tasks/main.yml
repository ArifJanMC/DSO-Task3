---
# Задачи для развертывания приложения Book Catalog
- name: Determine SSL directories
  ansible.builtin.set_fact:
    ssl_cert_dir: "{{ '/etc/ssl/certs' if ansible_os_family == 'Debian' else '/etc/pki/tls/certs' }}"
    ssl_key_dir: "{{ '/etc/ssl/private' if ansible_os_family == 'Debian' else '/etc/pki/tls/private' }}"

- name: Create SSL directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ ssl_cert_dir }}"
    - "{{ ssl_key_dir }}"

- name: Generate self-signed SSL certificate for NGINX
  ansible.builtin.command: >
    openssl req -x509 -nodes -days 365 -newkey rsa:2048
    -keyout {{ nginx_ssl_key }}
    -out {{ nginx_ssl_cert }}
    -subj "/C=US/ST=State/L=City/O=Organization/CN={{ app_domain }}"
  args:
    creates: "{{ nginx_ssl_cert }}"

- name: Create application directory
  ansible.builtin.file:
    path: "{{ app_repo_dir }}"
    state: directory
    mode: '0755'

- name: Clone application repository
  ansible.builtin.git:
    repo: "{{ app_repo }}"
    dest: "{{ app_repo_dir }}"
    clone: yes
    update: yes  # Обновляем репозиторий, если он уже существует

- name: Create Dockerfile from template
  ansible.builtin.template:
    src: Dockerfile.j2
    dest: "{{ app_repo_dir }}/Dockerfile"
    mode: '0644'

- name: Create docker-compose.yml from template
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ app_repo_dir }}/docker-compose.yml"
    mode: '0644'

- name: Create NGINX configuration
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ app_repo_dir }}/nginx.conf"
    mode: '0644'

- name: Create .env file
  ansible.builtin.template:
    src: .env.j2
    dest: "{{ app_repo_dir }}/.env"
    mode: '0644'

- name: Build and start application with docker-compose
  ansible.builtin.command: docker-compose up -d --build
  args:
    chdir: "{{ app_repo_dir }}"  # Запускаем docker-compose в директории приложения
  notify: 
    - Verify application is running  # Проверяем, что приложение запущено
    - Test application API  # Тестируем API приложения